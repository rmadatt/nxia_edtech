API Guide for EdTech AI Guardrails Project
Overview
The EdTech AI Guardrails API provides secure, AI-powered features for educational applications on mobile and desktop. It uses free, open-source tools like Flask, scikit-learn, and pandas to deliver recommendations and ensure safe, personalized learning experiences.

Base URL
http://localhost:5000/api (local development)

Authentication
Method: JSON Web Token (JWT)
How to Authenticate:
Send a POST request to /api/login with user_id and password.
Receive a token in the response.
Include the token in the Authorization header for protected endpoints: Bearer <token>.
Endpoints
POST /api/login
Description: Authenticates a user and returns a JWT token.
Request Body:
json
Wrap
Copy
{
  "user_id": "student123",
  "password": "mypassword"
}
Response (200 OK):
json
Wrap
Copy
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}
Errors:
400: Missing fields ({"error": "Missing fields: ['user_id']"})
POST /api/recommend
Description: Returns AI-generated content recommendations for a user.
Headers: Authorization: Bearer <token>
Request Body:
json
Wrap
Copy
{
  "features": [0.5, 0.3]
}
Response (200 OK):
json
Wrap
Copy
{
  "recommendations": [1]
}
Errors:
401: Invalid or missing token ({"error": "Token required"})
400: Missing fields ({"error": "Missing fields: ['features']"})
Setup Instructions
Install Dependencies:
bash
Wrap
Copy
pip install flask scikit-learn pandas numpy pyjwt
Run the API:
bash
Wrap
Copy
python app.py
Test with Postman:
Send a POST to http://localhost:5000/api/login with the above JSON.
Use the token to test /api/recommend.
Development Tools
Python: Core language.
Flask: Web framework.
scikit-learn: Machine learning for recommendations.
pandas/numpy: Data handling.
Jupyter Notebook: Prototype models (optional).
Postman: Test endpoints.
Security Notes
Use HTTPS in production (e.g., via Heroku).
Store the SECRET_KEY in an environment variable, not in code.
Validate all inputs to prevent injection attacks.
Deployment
Platform: Heroku (free tier available).
Steps:
Install Heroku CLI.
Run heroku create and git push heroku main.
Set environment variables: heroku config:set SECRET_KEY=your-secret.
Example Usage
bash
Wrap
Copy
curl -X POST -H "Content-Type: application/json" \
     -d '{"user_id": "student123", "password": "mypassword"}' \
     http://localhost:5000/api/login
Then:

bash
Wrap
Copy
curl -X POST -H "Content-Type: application/json" \
     -H "Authorization: Bearer <token>" \
     -d '{"features": [0.5, 0.3]}' \
     http://localhost:5000/api/recommend
